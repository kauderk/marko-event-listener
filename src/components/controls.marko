import { twCva } from "../utils/twCva";
let/handleClick=(
	function handleClick_() {
		console.log("Clicked!");
	}
)
let/ctx={
	centered: true,
	togglePlay() {
		handleClick();
	},
	volumeLevel: "high" as "high",
	volume: 0.2,
	changeVolume() {
		handleClick();
	},
	time: {
		current: 0,
		total: 0,
	},
	speed: 1,
	changePlaybackSpeed() {
		handleClick();
	},
	theater: false,
	fullScreen: {
		enabled: false,
		toggle() {
			handleClick();
		},
	},
	toggleTheaterMode() {
		handleClick();
	},
	toggleMute() {
		handleClick();
	},
	toggleCaptions() {
		handleClick();
	},
	paused: true,
}
let/f=twCva(
	"text-current p-0 h-7 w-7 cursor-pointer opacity-85 transition-opacity duration-150 ease-in-out hover:opacity-100",
	{
		defaultVariants: {
			variant: null,
		},
		variants: {
			variant: {
				error: "alert-error",
				info: "alert-info",
				success: "alert-success",
				warning: "alert-warning",
			},
		},
	}
)
const/btn=f({ className: "", variant: "success" })

div.controls.bg-blue.flex.gap-2.p-1.items-center.justify-center
	button class=btn
		SVG icon=(ctx.paused ? "play" : "pause")
	let/isHover=false
	let/isFocus=false
	let/volume=0.2

	div.volume-container.flex.items-center [
		onMouseOut() { isHover = false; }
		onMouseOver() { isHover = true; }
	]
		button class=btn onClick=ctx.toggleMute
			SVG icon=ctx.volumeLevel
		input.transform-origin-left.transform.scaleX-0.transition-width.duration-150.ease-in-out.appearance-auto.opacity-0 [
			style=`width: ${isHover || isFocus ? "5rem" : "0px"}; opacity: ${
				isHover || isFocus ? "1" : "0"
			};`
			onFocusOut() { isFocus = false; }
			onFocusIn() { isFocus = true; }
			type="range"
			min=0
			max=1
			step="any"
			value=volume
			onChange(e) { volume = Number(e.srcElement.value); }
			onInput(e) { volume = Number(e.srcElement.value); }
		]
	div.duration-container.flex.items-center.gap-1.flex-grow
		span.currentTime -- ${ctx.time.current}
		-- /
		span.totalTime -- ${ctx.time.total}
	button class=btn onClick=ctx.toggleCaptions
		SVG icon="captions"
	button class=btn -- ${ctx.speed}x
	button class=btn
		SVG icon="mini"
	button class=btn onClick=ctx.toggleTheaterMode
		SVG icon=(ctx.theater ? "tall" : "wide")
	button class=btn onClick=(ctx.fullScreen.toggle)
		SVG icon=(ctx.fullScreen.enabled ? "open" : "close")
//

